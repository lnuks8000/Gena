# handlers/weather.py

from aiogram import Router, F, types
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from utils.weather_api import get_weather
from utils.file_manager import save_to_csv
from utils.media_sender import send_weather_media

router = Router()

# –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏
cities = [
    "–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å",
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–°–∞–º–∞—Ä–∞", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", "–£—Ñ–∞", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä"
]

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –≥–æ—Ä–æ–¥–æ–≤
def get_city_keyboard():
    buttons = [InlineKeyboardButton(text=city, callback_data=f"weather_{city}") for city in cities]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        buttons[i:i+2] for i in range(0, len(buttons), 2)
    ])
    return keyboard

# –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é
@router.message(F.text.lower() == "/start")
async def start_handler(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üå§ –í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é:",
        reply_markup=get_city_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –∏–∑ –º–µ–Ω—é
@router.callback_query(F.data.startswith("weather_"))
async def handle_city_callback(callback: CallbackQuery):
    city = callback.data.replace("weather_", "")

    await callback.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏"

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã
    weather_data = await get_weather(city)

    if weather_data is None:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    response = (
        f"üåÜ –ì–æ—Ä–æ–¥: {city}\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temp']}¬∞C\n"
        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%\n"
        f"‚òî –û—Å–∞–¥–∫–∏: {weather_data['description']}"
    )

    await callback.message.answer(response)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
    save_to_csv(city, weather_data)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞
    await send_weather_media(callback.message, weather_data)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –≥–æ—Ä–æ–¥ —Å–∞–º
@router.message(F.text)
async def handle_weather(message: Message):
    city = message.text.strip()

    weather_data = await get_weather(city)

    if weather_data is None:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        return

    response = (
        f"üåÜ –ì–æ—Ä–æ–¥: {city}\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temp']}¬∞C\n"
        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%\n"
        f"‚òî –û—Å–∞–¥–∫–∏: {weather_data['description']}"
    )

    await message.answer(response)

    save_to_csv(city, weather_data)

    await send_weather_media(message, weather_data)
